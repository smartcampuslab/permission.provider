<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2012-2013 Trento RISE Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"

	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd ">


	<sec:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="clientAuthenticationManager">
		<sec:intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
		<sec:anonymous enabled="false" />
		<sec:http-basic entry-point-ref="clientAuthenticationEntryPoint" />
		<!-- include this only if you need to authenticate clients via request 
			parameters -->
		<sec:custom-filter ref="clientCredentialsTokenEndpointFilter"
			after="BASIC_AUTH_FILTER" />
		<sec:access-denied-handler ref="oauthAccessDeniedHandler" />
	</sec:http>

	<sec:http entry-point-ref="forbEntryPoint"
		disable-url-rewriting="true" xmlns="http://www.springframework.org/schema/security">
		<intercept-url pattern="/oauth/**" access="IS_AUTHENTICATED_FULLY" />
	</sec:http>

	<bean id="clientAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="sparklr2/client" />
		<property name="typeName" value="Basic" />
	</bean>
	<bean id="forbEntryPoint"
		class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint">
	</bean>

	<bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />

	<bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>

	<sec:authentication-manager id="clientAuthenticationManager">
		<sec:authentication-provider
			user-service-ref="clientDetailsUserService" />
	</sec:authentication-manager>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider
			user-service-ref="userDetailsService" />
	</sec:authentication-manager>

	<bean id="clientDetailsUserService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetails" />
	</bean>

	<bean id="userDetailsService"
		class="eu.trentorise.smartcampus.permissionprovider.oauth.UserDetailsRepo">
	</bean>

	<bean id="tokenStore" class="eu.trentorise.smartcampus.permissionprovider.oauth.AutoJdbcTokenStore">
        <constructor-arg ref="dataSource" />
	</bean>

	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="clientDetailsService" ref="clientDetails" />
	</bean>

	<oauth:authorization-server
		client-details-service-ref="clientDetails" token-services-ref="tokenServices">
		<oauth:authorization-code authorization-code-services-ref="authorizationCodeServices"/>
		<oauth:implicit />
		<oauth:refresh-token />
		<oauth:client-credentials />
		<oauth:password />
	</oauth:authorization-server>

    <bean id="authorizationCodeServices" class="eu.trentorise.smartcampus.permissionprovider.oauth.AutoJdbcAuthorizationCodeServices">
        <constructor-arg ref="dataSource" />
    </bean>
		
	
	<oauth:client-details-service id="clientDetails">
		<oauth:client client-id="tonr" resource-ids="sparklr"
			authorized-grant-types="authorization_code,implicit" authorities="ROLE_CLIENT"
			scope="read,write" secret="secret" redirect-uri="http://localhost:8088/tonr" />
	</oauth:client-details-service>

	<mvc:annotation-driven />

	<mvc:default-servlet-handler />

	<!-- Override the default mappings for approval and error pages -->
	<!--Basic application beans. -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="viewResolvers">
			<bean
				class="org.springframework.web.servlet.view.InternalResourceViewResolver">
				<property name="prefix" value="/WEB-INF/jsp/"></property>
				<property name="suffix" value=".jsp"></property>
			</bean>
		</property>
		<property name="defaultViews">
			<bean
				class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
				<property name="extractValueFromSingleKeyModel" value="true" />
			</bean>
		</property>
	</bean>

	<bean id="authController"
		class="eu.trentorise.smartcampus.permissionprovider.oauth.AuthController">
	</bean>

	<import resource="datalayer.xml"/>

</beans>
